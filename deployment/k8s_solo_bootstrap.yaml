apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: og-solo
spec:
  selector:
    matchLabels:
      app: og-solo
  replicas: 1
  serviceName: service-og-solo
  volumeClaimTemplates:
    - metadata:
        name: gluster-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "gluster-heketi"
        resources:
          requests:
            storage: 30Gi
        selector:
          matchLabels:
            target: og-solo
  template:
    metadata:
      labels:
        app: og-solo
    spec:
      containers:
        - name: og-solo
          image: 172.28.152.101:5000/og-solo:zhang-dev-v0.0.5
          env:
            - name: OG_P2P.BOOTSTRAP_CONFIG_SERVER
              value: "http://ogboot:8008/7"
            - name: OG_P2P.NETWORK_ID
              value: "6"
            - name: OG_MODE
              value: "normal"
            - name: OG_P2P_ENABLE_BOOT_SERVER
              value: "true"
            - name: OG_P2P_GEN_NODE_KEY
              value: "true"
          ports:
            - name: rpc
              containerPort: 8000
              protocol: TCP
            - name: p2p
              containerPort: 8001
            - name: websocket
              containerPort: 8002
            - name: profiling
              containerPort: 8003
          volumeMounts:
            - name: gluster-volume
              mountPath: "/data"
              readOnly: false
          command:
            ["./og", "-c", "/data/config.toml", "-m", "-n", "-l", "/data/log/", "-d", "/data", "--genkey", "run"]
          resources:
            limits:
              cpu: "2"
            requests:
              cpu: "100m"

---

apiVersion: v1
kind: Service
metadata:
  name: service-og-solo
spec:
  type: NodePort
  ports:
    - port: 8000
      nodePort: 30300
      name: rpc
    - port: 8002
      nodePort: 30302
      name: websocket
    - port: 8003
      nodePort: 30303
      name: profiling
  selector:
    app: og-solo
